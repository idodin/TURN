/**
 * generated by Xtext 2.15.0
 */
package org.xtext.project.turn.turn.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.project.turn.turn.EnumerationLiteral;
import org.xtext.project.turn.turn.EnumerationType;
import org.xtext.project.turn.turn.TurnPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Enumeration Type</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.project.turn.turn.impl.EnumerationTypeImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.project.turn.turn.impl.EnumerationTypeImpl#getEnumLiteral <em>Enum Literal</em>}</li>
 *   <li>{@link org.xtext.project.turn.turn.impl.EnumerationTypeImpl#getEnumLiterals <em>Enum Literals</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EnumerationTypeImpl extends MinimalEObjectImpl.Container implements EnumerationType
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getEnumLiteral() <em>Enum Literal</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnumLiteral()
   * @generated
   * @ordered
   */
  protected EList<EnumerationLiteral> enumLiteral;

  /**
   * The cached value of the '{@link #getEnumLiterals() <em>Enum Literals</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnumLiterals()
   * @generated
   * @ordered
   */
  protected EList<String> enumLiterals;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EnumerationTypeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TurnPackage.Literals.ENUMERATION_TYPE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TurnPackage.ENUMERATION_TYPE__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<EnumerationLiteral> getEnumLiteral()
  {
    if (enumLiteral == null)
    {
      enumLiteral = new EObjectContainmentEList<EnumerationLiteral>(EnumerationLiteral.class, this, TurnPackage.ENUMERATION_TYPE__ENUM_LITERAL);
    }
    return enumLiteral;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<String> getEnumLiterals()
  {
    if (enumLiterals == null)
    {
      enumLiterals = new EDataTypeEList<String>(String.class, this, TurnPackage.ENUMERATION_TYPE__ENUM_LITERALS);
    }
    return enumLiterals;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case TurnPackage.ENUMERATION_TYPE__ENUM_LITERAL:
        return ((InternalEList<?>)getEnumLiteral()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TurnPackage.ENUMERATION_TYPE__NAME:
        return getName();
      case TurnPackage.ENUMERATION_TYPE__ENUM_LITERAL:
        return getEnumLiteral();
      case TurnPackage.ENUMERATION_TYPE__ENUM_LITERALS:
        return getEnumLiterals();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TurnPackage.ENUMERATION_TYPE__NAME:
        setName((String)newValue);
        return;
      case TurnPackage.ENUMERATION_TYPE__ENUM_LITERAL:
        getEnumLiteral().clear();
        getEnumLiteral().addAll((Collection<? extends EnumerationLiteral>)newValue);
        return;
      case TurnPackage.ENUMERATION_TYPE__ENUM_LITERALS:
        getEnumLiterals().clear();
        getEnumLiterals().addAll((Collection<? extends String>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TurnPackage.ENUMERATION_TYPE__NAME:
        setName(NAME_EDEFAULT);
        return;
      case TurnPackage.ENUMERATION_TYPE__ENUM_LITERAL:
        getEnumLiteral().clear();
        return;
      case TurnPackage.ENUMERATION_TYPE__ENUM_LITERALS:
        getEnumLiterals().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TurnPackage.ENUMERATION_TYPE__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case TurnPackage.ENUMERATION_TYPE__ENUM_LITERAL:
        return enumLiteral != null && !enumLiteral.isEmpty();
      case TurnPackage.ENUMERATION_TYPE__ENUM_LITERALS:
        return enumLiterals != null && !enumLiterals.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", enumLiterals: ");
    result.append(enumLiterals);
    result.append(')');
    return result.toString();
  }

} //EnumerationTypeImpl
